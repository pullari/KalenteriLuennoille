/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package luentokalenteri.kayttojarjestelma;

import java.awt.Color;
import java.awt.Component;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import luentokalenteri.domain.lista.Merkinta;
import luentokalenteri.domain.lista.Merkintalista;
import luentokalenteri.sovelluslogiikka.Sovelluslogiikka;

/**
 *
 * @author Pullis
 */
public class KalenteriGUI extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form KalenteriForm
     */
    Sovelluslogiikka logiikka;
    
    public KalenteriGUI() {
        initComponents();
        logiikka = new Sovelluslogiikka(kysyTiedostoLoop());
        logiikka.puraTiedosto();
        lisataanTallennusKunRaksiaPainetaan();
        paivitaTable();
    }

    @Override
    public void run() {

        for (int i = 1; i < 6; i++) {
            kalenteriTable.getColumnModel().getColumn(i).setCellRenderer(new omaRenderoija());

        }
        this.pack();
        this.setVisible(true);
    }

    private File kysyTiedostoLoop(){
        
        final JFileChooser fc = new JFileChooser();
        fc.showOpenDialog(null);
        
        if (fc.getSelectedFile() != null){
            
            String nimi = fc.getSelectedFile().getName();
        
            while (!nimi.substring(nimi.lastIndexOf("."), nimi.length()).equals(".txt")) {
                fc.showOpenDialog(null);
                nimi = fc.getSelectedFile().getName();

            }
            return fc.getSelectedFile();
        }
        
        System.exit(0);
        return null;
    }
    
    private void lisataanTallennusKunRaksiaPainetaan() {

        java.awt.event.WindowAdapter ohitettuDefaultClose = new java.awt.event.WindowAdapter() {

            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                logiikka.tallennaTila();
                System.exit(0);
            }
        };
        this.addWindowListener(ohitettuDefaultClose);
    }

    private void paivitaTable() {

        DefaultTableModel model = (DefaultTableModel) kalenteriTable.getModel();
        model.fireTableDataChanged();
    }
    
    private String getPaivat(int indeksi){
        String[] paivat = {"ma", "ti", "ke", "to", "pe"};
        return paivat[indeksi];
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lisaysDialog = new javax.swing.JDialog();
        paivaLabel = new javax.swing.JLabel();
        nimiLabel = new javax.swing.JLabel();
        aikaLabel = new javax.swing.JLabel();
        kuvausLabel = new javax.swing.JLabel();
        lisaaKuvausPane = new javax.swing.JScrollPane();
        lisaaKuvaus = new javax.swing.JTextArea();
        lisaaPaiva = new java.awt.TextField();
        lisaaNimi = new java.awt.TextField();
        lisaaAika = new java.awt.TextField();
        lisaysNappi = new javax.swing.JButton();
        poistoDialog = new javax.swing.JDialog();
        poistoPaivaLabel = new javax.swing.JLabel();
        poistoNimiLabel = new javax.swing.JLabel();
        poistoNimi = new java.awt.TextField();
        poistoPaiva = new java.awt.TextField();
        poistoButton = new javax.swing.JButton();
        kuvausPane = new javax.swing.JScrollPane();
        kuvausArea = new javax.swing.JTextArea();
        kalenteriPane = new javax.swing.JScrollPane();
        kalenteriTable = new javax.swing.JTable();
        paivaPane = new javax.swing.JScrollPane();
        paivaLista = new javax.swing.JList();
        luennotPane = new javax.swing.JScrollPane();
        luennotLista = new javax.swing.JList();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        tallennaItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        lisaaItem = new javax.swing.JMenuItem();
        poistaItem = new javax.swing.JMenuItem();
        tyhjennaItem = new javax.swing.JMenuItem();

        lisaysDialog.setTitle("Lisäys");
        lisaysDialog.setMinimumSize(new java.awt.Dimension(335, 315));
        lisaysDialog.setPreferredSize(new java.awt.Dimension(340, 200));

        paivaLabel.setText("Päivä (ma, ti, ke, to, pe):");

        nimiLabel.setText("Nimi (Ei puolipisteitä):");

        aikaLabel.setText("Aika (esim. 12-14):");

        kuvausLabel.setText("Kuvaus:");

        lisaaKuvaus.setColumns(20);
        lisaaKuvaus.setRows(5);
        lisaaKuvausPane.setViewportView(lisaaKuvaus);

        lisaaAika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lisaaAikaActionPerformed(evt);
            }
        });

        lisaysNappi.setText("Lisää");
        lisaysNappi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lisaysNappiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lisaysDialogLayout = new javax.swing.GroupLayout(lisaysDialog.getContentPane());
        lisaysDialog.getContentPane().setLayout(lisaysDialogLayout);
        lisaysDialogLayout.setHorizontalGroup(
            lisaysDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lisaysDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lisaysDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lisaysDialogLayout.createSequentialGroup()
                        .addGroup(lisaysDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lisaaKuvausPane)
                            .addGroup(lisaysDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(kuvausLabel)
                                .addGroup(lisaysDialogLayout.createSequentialGroup()
                                    .addGroup(lisaysDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(aikaLabel)
                                        .addComponent(paivaLabel)
                                        .addComponent(nimiLabel))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(lisaysDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(lisaysDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lisaaNimi, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lisaaPaiva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(lisaaAika, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lisaysDialogLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lisaysNappi)))
                .addContainerGap())
        );
        lisaysDialogLayout.setVerticalGroup(
            lisaysDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lisaysDialogLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(lisaysDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(lisaysDialogLayout.createSequentialGroup()
                        .addGroup(lisaysDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(paivaLabel)
                            .addComponent(lisaaPaiva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(lisaysDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nimiLabel)
                            .addComponent(lisaaNimi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addComponent(aikaLabel))
                    .addComponent(lisaaAika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(kuvausLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lisaaKuvausPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lisaysNappi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        poistoDialog.setTitle("Poisto");
        poistoDialog.setMinimumSize(new java.awt.Dimension(320, 150));

        poistoPaivaLabel.setText("Päivä (ma, ti, ke, to, pe):");

        poistoNimiLabel.setText("Poistettavan nimi:");

        poistoButton.setText("Poista");
        poistoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poistoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout poistoDialogLayout = new javax.swing.GroupLayout(poistoDialog.getContentPane());
        poistoDialog.getContentPane().setLayout(poistoDialogLayout);
        poistoDialogLayout.setHorizontalGroup(
            poistoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(poistoDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(poistoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(poistoButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, poistoDialogLayout.createSequentialGroup()
                        .addGroup(poistoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(poistoNimiLabel)
                            .addComponent(poistoPaivaLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(poistoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(poistoPaiva, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(poistoNimi, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        poistoDialogLayout.setVerticalGroup(
            poistoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(poistoDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(poistoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(poistoPaiva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(poistoPaivaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(poistoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(poistoNimiLabel)
                    .addComponent(poistoNimi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(poistoButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kalenteri");

        kuvausArea.setColumns(20);
        kuvausArea.setRows(5);
        kuvausPane.setViewportView(kuvausArea);

        kalenteriTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"08:00", null, null, null, null, null},
                {"09:00", null, null, null, null, null},
                {"10:00", null, null, null, null, null},
                {"11:00", null, null, null, null, null},
                {"12:00", null, null, null, null, null},
                {"13:00", null, null, null, null, null},
                {"14:00", null, null, null, null, null},
                {"15:00", null, null, null, null, null},
                {"16:00", null, null, null, null, null},
                {"17:00", null, null, null, null, null},
                {"18:00", null, null, null, null, null},
                {"19:00", null, null, null, null, null},
                {"20:00", null, null, null, null, null}
            },
            new String [] {
                "klo", "Maanantai", "Tiistai", "Keskiviikko", "Torstai", "Perjantai"
            }
        ));
        kalenteriPane.setViewportView(kalenteriTable);

        paivaLista.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Maanantai", "Tiistai", "Keskiviikko", "Torstai", "Perjantai" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        paivaLista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                paivaListaValueChanged(evt);
            }
        });
        paivaPane.setViewportView(paivaLista);

        luennotLista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                luennotListaValueChanged(evt);
            }
        });
        luennotPane.setViewportView(luennotLista);

        fileMenu.setText("File");

        tallennaItem.setText("Tallenna");
        tallennaItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tallennaItemActionPerformed(evt);
            }
        });
        fileMenu.add(tallennaItem);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");

        lisaaItem.setText("Lisää");
        lisaaItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lisaaItemActionPerformed(evt);
            }
        });
        editMenu.add(lisaaItem);

        poistaItem.setText("Poista");
        poistaItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poistaItemActionPerformed(evt);
            }
        });
        editMenu.add(poistaItem);

        tyhjennaItem.setText("Tyhjennä");
        tyhjennaItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tyhjennaItemActionPerformed(evt);
            }
        });
        editMenu.add(tyhjennaItem);

        jMenuBar1.add(editMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(paivaPane, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(luennotPane, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kalenteriPane, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE))
            .addComponent(kuvausPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(paivaPane, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(luennotPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(kalenteriPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kuvausPane, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void poistaItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poistaItemActionPerformed
        // TODO add your handling code here:
        poistoDialog.setVisible(true);
    }//GEN-LAST:event_poistaItemActionPerformed

    private void lisaaItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lisaaItemActionPerformed
        // TODO add your handling code here:
        lisaysDialog.setVisible(true);
    }//GEN-LAST:event_lisaaItemActionPerformed

    private void tyhjennaItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tyhjennaItemActionPerformed
        // TODO add your handling code here:
        if (logiikka.suoritaKomento(3)) {
            paivitaTable();

        } else {
            JOptionPane.showMessageDialog(null, "Tyhjennys epäonnistui", "Virhe", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tyhjennaItemActionPerformed

    private void tallennaItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tallennaItemActionPerformed
        // TODO add your handling code here:

        logiikka.tallennaTila();
    }//GEN-LAST:event_tallennaItemActionPerformed

    private void paivaListaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_paivaListaValueChanged
        // TODO add your handling code here:
        if (paivaLista.getSelectedIndex() == -1) {

        } else {
            DefaultListModel modeli = new DefaultListModel();

            for (Merkinta tama : logiikka.getLista().getMap().get(getPaivat(paivaLista.getSelectedIndex()))) {
                modeli.addElement(tama.getNimi() + " " + tama.getAika());

            }
            luennotLista.setModel(modeli);
        }
    }//GEN-LAST:event_paivaListaValueChanged

    private void luennotListaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_luennotListaValueChanged
        // TODO add your handling code here:
        if (luennotLista.getSelectedIndex() == -1) {
            kuvausArea.setText("");

        } else {
            kuvausArea.setText(logiikka.getLista().getMap().get(getPaivat(paivaLista.getSelectedIndex())).get(luennotLista.getSelectedIndex()).getKuvaus());
        }
    }//GEN-LAST:event_luennotListaValueChanged

    private void lisaaAikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lisaaAikaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lisaaAikaActionPerformed

    private void lisaysNappiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lisaysNappiActionPerformed
        // TODO add your handling code here:
        String paiva = lisaaPaiva.getText();
        String nimi = lisaaNimi.getText();
        String aika = lisaaAika.getText();
        String kuvaus = lisaaKuvaus.getText();
        
        if (logiikka.suoritaKomento(1, paiva, nimi, aika, kuvaus)) {
            paivitaTable();
            
        } else {
            lisaysDialog.dispose();
            JOptionPane.showMessageDialog(null, "Lisäys epäonnistui", "Virhe", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_lisaysNappiActionPerformed

    private void poistoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poistoButtonActionPerformed
        // TODO add your handling code here:
        String paiva = poistoPaiva.getText();
        String nimi = poistoNimi.getText();
        
        if (logiikka.suoritaKomento(2, paiva, nimi)) {
            paivitaTable();

        } else {
            JOptionPane.showMessageDialog(null, "Poisto epäonnistui", "Virhe", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_poistoButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aikaLabel;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane kalenteriPane;
    private javax.swing.JTable kalenteriTable;
    private javax.swing.JTextArea kuvausArea;
    private javax.swing.JLabel kuvausLabel;
    private javax.swing.JScrollPane kuvausPane;
    private java.awt.TextField lisaaAika;
    private javax.swing.JMenuItem lisaaItem;
    private javax.swing.JTextArea lisaaKuvaus;
    private javax.swing.JScrollPane lisaaKuvausPane;
    private java.awt.TextField lisaaNimi;
    private java.awt.TextField lisaaPaiva;
    private javax.swing.JDialog lisaysDialog;
    private javax.swing.JButton lisaysNappi;
    private javax.swing.JList luennotLista;
    private javax.swing.JScrollPane luennotPane;
    private javax.swing.JLabel nimiLabel;
    private javax.swing.JLabel paivaLabel;
    private javax.swing.JList paivaLista;
    private javax.swing.JScrollPane paivaPane;
    private javax.swing.JMenuItem poistaItem;
    private javax.swing.JButton poistoButton;
    private javax.swing.JDialog poistoDialog;
    private java.awt.TextField poistoNimi;
    private javax.swing.JLabel poistoNimiLabel;
    private java.awt.TextField poistoPaiva;
    private javax.swing.JLabel poistoPaivaLabel;
    private javax.swing.JMenuItem tallennaItem;
    private javax.swing.JMenuItem tyhjennaItem;
    // End of variables declaration//GEN-END:variables

    public class omaRenderoija extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {

            Component cell = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            Merkintalista tulostettavat = logiikka.getLista();
            Map<String, List<Merkinta>> listaTulostettavista = tulostettavat.getMap();

            for (int i = 1; i <= 5; i++) {

                if (column == i) {
                    ArrayList<Integer> varjattavat = new ArrayList<>();

                    for (Merkinta tama : listaTulostettavista.get(getPaivat(i - 1))) {
                        lisaaAjatListaan(tama, varjattavat);
                        tulostaNimiTableen(tama, column);
                    }
                    if (varjattavat.contains(row)) {
                        cell.setBackground(Color.red);
                        
                        if (row != varjattavat.get(0)) {
                            kalenteriTable.setValueAt("", row, column);
                        }
                        
                    } else {
                        cell.setBackground(Color.white);
                        kalenteriTable.setValueAt("", row, column);
                    }

                }
            }
            return cell;
        }

        private void tulostaNimiTableen(Merkinta tama, int column) {

            int[] aikaPurettuna = puraAika(tama);
            kalenteriTable.setValueAt(tama.getNimi(), aikaPurettuna[0], column);
        }

        private void lisaaAjatListaan(Merkinta tama, ArrayList<Integer> lista) {

            int[] aikaPurettuna = puraAika(tama);

            for (int i = aikaPurettuna[0]; i < aikaPurettuna[1]; i++) {
                lista.add(i);
            }
        }

        private int[] puraAika(Merkinta tama) {

            String aika = tama.getAika();
            String[] osat = aika.split("-");

            int eka = Integer.parseInt(osat[0]);
            int toka = Integer.parseInt(osat[1]);

            int[] palautettava = {eka - 8, toka - 8}; //Miinus 8 koska mukautetaan riveihin JTablessa.

            return palautettava;
        }
    }
}
